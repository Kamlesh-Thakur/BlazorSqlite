@page "/projects"
@using BlazorSqlite.Models
@using BlazorSqlite.Services
@inject IProjectService ProjectService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<h3>Projects</h3>

@if (projects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Database Path</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in projects)
            {
                <tr>
                    <td>@project.Name</td>
                    <td>@project.Description</td>
                    <td>@project.DatabasePath</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => LoadDatabase(project.DatabasePath)">View</button>
                        <a href="projects/delete/@project.Id" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a href="/projects/create" class="btn btn-success">Create New Project</a>
}

@code {
    private List<Project> projects;

    protected override async Task OnInitializedAsync()
    {
        projects = await ProjectService.GetProjectsAsync();
    }

    private void LoadDatabase(string dbPath)
    {
        NavigationManager.NavigateTo($"/database/{Uri.EscapeDataString(dbPath)}");
    }
}
